<%= turbo_frame_tag cart_item do %>
  <div class="grid grid-cols-1 md:grid-cols-6 gap-4 items-center p-4 border-b hover:bg-gray-50">
    <div class="col-span-full md:col-span-2 flex items-center space-x-4">
      <%= link_to product_path(cart_item.product, variant_id: cart_item.product_variant.id), data: { turbo: false } do %>
        <% if cart_item.product_variant.image.attached? %>
          <%= image_tag cart_item.product_variant.image, class: "w-20 h-20 object-cover rounded-md shadow", alt: cart_item.product_variant.display_name %>
        <% elsif cart_item.product.image.attached? %>
          <%= image_tag cart_item.product.image, class: "w-20 h-20 object-cover rounded-md shadow", alt: cart_item.product.name %>
        <% else %>
          <div class="w-20 h-20 bg-gray-200 rounded-md shadow flex items-center justify-center text-gray-500 text-xs">
            No Image
          </div>
        <% end %>
      <% end %>
      <div>
        <%= link_to cart_item.product.name, product_path(cart_item.product, variant_id: cart_item.product_variant.id), class: "text-xl font-medium text-gray-800 hover:text-primary-500", data: { turbo: false } %>
        <% if cart_item.configured? %>
          <div class="text-gray-600">
            Size: <%= cart_item.configuration["size"] %>
          </div>
          <div class="text-gray-500 text-sm">
            Custom branded with your design
          </div>
        <% else %>
          <div class="text-lg">
            <%= cart_item.product_variant.name %>
          </div>
          <% if cart_item.product_variant.pac_size.present? && cart_item.product_variant.pac_size > 1 %>
            <div class="text-gray-500 text-sm">
              Pack of <%= cart_item.product_variant.pac_size %>
            </div>
          <% end %>
        <% end %>
      </div>
    </div>

    <div class="text-left md:text-center text-gray-700">
      <span class="md:hidden font-semibold">Price: </span>
      <% if cart_item.configured? %>
        <%= number_to_currency(cart_item.unit_price, precision: 4) %>/unit
      <% else %>
        <%= number_to_currency(cart_item.price) %>
      <% end %>
    </div>

    <div class="text-left md:text-center">
      <% if cart_item.configured? %>
        <div class="text-gray-700">
          <%= number_with_delimiter(cart_item.configuration["quantity"]) %>
        </div>
      <% else %>
        <%
          variant = cart_item.product_variant
          min_order = variant.pac_size || 1
          available_stock = variant.stock_quantity
          max_qty = [available_stock, 10000].min

          # Generate options in appropriate increments
          if min_order >= 500
            # Bulk products: 500 unit increments
            quantity_options = (min_order..max_qty).step(500).to_a
          else
            # Standard products: 1, 2, 3, 5, 10, 20, 50, 100...
            quantity_options = [1, 2, 3, 5, 10, 20, 50, 100, 200, 500].select { |q| q >= min_order && q <= max_qty }
          end

          # Always include current quantity and available stock
          quantity_options << cart_item.quantity unless quantity_options.include?(cart_item.quantity)
          quantity_options << available_stock if available_stock <= max_qty && !quantity_options.include?(available_stock)
          quantity_options.sort!
        %>

        <%= form_with(model: cart_item, url: cart_cart_item_path(cart_item), method: :patch, local: false) do |form| %>
          <%= form.select :quantity,
                          options_for_select(quantity_options.map { |q| [number_with_delimiter(q), q] }, cart_item.quantity),
                          {},
                          class: "select select-sm select-bordered",
                          onchange: "this.form.requestSubmit()" %>
        <% end %>
      <% end %>
    </div>

    <div class="text-right text-gray-700">
      <span class="md:hidden font-semibold">Total: </span>
      <%= number_to_currency(cart_item.line_total) %>
    </div>

    <div class="text-right md:text-center">
      <%= button_to "Remove", cart_cart_item_path(cart_item), method: :delete, class: "btn btn-outline btn-error btn-sm", local: false %>
    </div>
  </div>
<% end %>